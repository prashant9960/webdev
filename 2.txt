Great! Here's the **clean, simple, and to-the-point** solution for âœ… **Assignment 2: User Directory App**, using **React**, **React Router DOM**, and only the **required components** â€” no extras, just what you asked for.

---

## âœ… Folder Structure

```
/src
  /components
    - UserCard.jsx
    - SearchBar.jsx
    - GenderFilter.jsx
  /pages
    - UserList.jsx
    - UserDetails.jsx
  App.jsx
  index.jsx
```

---

## âœ… `index.jsx`

```jsx
import React from "react";
import ReactDOM from "react-dom/client";
import { BrowserRouter } from "react-router-dom";
import App from "./App";

ReactDOM.createRoot(document.getElementById("root")).render(
  <BrowserRouter>
    <App />
  </BrowserRouter>
);
```

---

## âœ… `App.jsx`

```jsx
import { Routes, Route } from "react-router-dom";
import UserList from "./pages/UserList";
import UserDetails from "./pages/UserDetails";

export default function App() {
  return (
    <Routes>
      <Route path="/" element={<UserList />} />
      <Route path="/user/:id" element={<UserDetails />} />
    </Routes>
  );
}
```

---

## âœ… `UserList.jsx`

```jsx
import { useEffect, useState } from "react";
import SearchBar from "../components/SearchBar";
import GenderFilter from "../components/GenderFilter";
import UserCard from "../components/UserCard";

export default function UserList() {
  const [users, setUsers] = useState([]);
  const [filtered, setFiltered] = useState([]);
  const [search, setSearch] = useState("");
  const [gender, setGender] = useState("");

  const fetchUsers = () => {
    fetch("https://randomuser.me/api/?results=20")
      .then(res => res.json())
      .then(data => {
        setUsers(data.results);
        setFiltered(data.results);
      });
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  useEffect(() => {
    let result = users;

    if (search) {
      result = result.filter(u =>
        `${u.name.first} ${u.name.last}`.toLowerCase().includes(search.toLowerCase())
      );
    }

    if (gender) {
      result = result.filter(u => u.gender === gender);
    }

    setFiltered(result);
  }, [search, gender, users]);

  return (
    <div>
      <button onClick={fetchUsers}>Randomize Users</button>
      <SearchBar onChange={setSearch} />
      <GenderFilter onChange={setGender} />
      {filtered.map(user => (
        <UserCard key={user.login.uuid} user={user} />
      ))}
    </div>
  );
}
```

---

## âœ… `UserDetails.jsx`

```jsx
import { useParams, useNavigate, useLocation } from "react-router-dom";

export default function UserDetails() {
  const { id } = useParams();
  const navigate = useNavigate();
  const location = useLocation();
  const user = location.state;

  if (!user) return <p>User not found.</p>;

  return (
    <div>
      <button onClick={() => navigate("/")}>Back to List</button>
      <img src={user.picture.large} />
      <h2>{user.name.first} {user.name.last}</h2>
      <p>Email: {user.email}</p>
      <p>Phone: {user.phone}</p>
      <p>DOB: {user.dob.date.slice(0, 10)}</p>
      <p>Location: {user.location.city}, {user.location.country}</p>
    </div>
  );
}
```

---

## âœ… `UserCard.jsx`

```jsx
import { useNavigate } from "react-router-dom";

export default function UserCard({ user }) {
  const nav = useNavigate();

  return (
    <div onClick={() => nav(`/user/${user.login.uuid}`, { state: user })}>
      <img src={user.picture.thumbnail} />
      <h3>{user.name.first} {user.name.last}</h3>
      <p>{user.email}</p>
    </div>
  );
}
```

---

## âœ… `SearchBar.jsx`

```jsx
export default function SearchBar({ onChange }) {
  return (
    <input
      type="text"
      placeholder="Search by name"
      onChange={e => onChange(e.target.value)}
    />
  );
}
```

---

## âœ… `GenderFilter.jsx`

```jsx
export default function GenderFilter({ onChange }) {
  return (
    <select onChange={e => onChange(e.target.value)}>
      <option value="">All</option>
      <option value="male">Male</option>
      <option value="female">Female</option>
    </select>
  );
}
```

---

Let me know if you want:
- ðŸ§ª Unit test files
- ðŸ’… Styled version
- ðŸ—‚ ZIP download
- ðŸ“¤ GitHub deploy-ready version

Ready to go âœ…